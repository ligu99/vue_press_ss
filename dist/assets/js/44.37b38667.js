(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{339:function(e,a,t){"use strict";t.r(a);var v=t(5),s=Object(v.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[a("strong",[e._v("需求：在 keep-alive 的组件被激活时，需要重新获取某个数据")])]),e._v(" "),a("h5",{attrs:{id:"keep-alive-的生命周期执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive-的生命周期执行"}},[e._v("#")]),e._v(" keep-alive 的生命周期执行")]),e._v(" "),a("p",[e._v("页面第一次进入，钩子的触发顺序\ncreated-> mounted-> activated，\n退出时触发 deactivated\n当再次进入（前进或者后退）时，只触发 activated\n事件挂载的方法等，只执行一次的放在 mounted 中；组件每次进去执行的方法放在 activated 中。")]),e._v(" "),a("h5",{attrs:{id:"基本用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本用法"}},[e._v("#")]),e._v(" 基本用法")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\x3c!-- 被keepalive包含的组件会被缓存 --\x3e\n<keep-alive>\n  <component></component>\n</keep-alive>\n")])])]),a("p",[e._v("被 keepalive 包含的组件不会被再次初始化，也就意味着不会重走生命周期函数;\n但是有时候是希望我们缓存的组件可以能够再次进行渲染，这时 Vue 为我们解决了这个问题;\n被包含在 keep-alive 中创建的组件，会多出两个生命周期的钩子: activated 与 deactivated。")]),e._v(" "),a("ul",[a("li",[e._v("activated\n当 keepalive 包含的组件再次渲染的时候触发")]),e._v(" "),a("li",[e._v("deactivated\n当 keepalive 包含的组件销毁的时候触发")])]),e._v(" "),a("p",[e._v("keepalive 是一个抽象的组件，缓存的组件不会被 mounted,为此提供 activated 和 deactivated 钩子函数")]),e._v(" "),a("h5",{attrs:{id:"tips"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tips"}},[e._v("#")]),e._v(" Tips")]),e._v(" "),a("ol",[a("li",[e._v("在 vue2.0 的写法可以这样：")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<keep-alive>\n  <acom v-if=\"comval === 'a'\"></acom>\n  <bcom v-if=\"comval === 'b'\"></bcom>\n</keep-alive>\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[e._v("在 vue3.0 上面的写法会报错")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("VueCompilerError: <KeepAlive> expects exactly one child component.\n")])])]),a("p",[e._v("只能写成：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<keep-alive>\n  <component :is="comval"></component>\n</keep-alive>\n')])])])])}),[],!1,null,null,null);a.default=s.exports}}]);